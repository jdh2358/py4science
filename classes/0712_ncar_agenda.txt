===================================================
 Practical Scientific Computing in Python - Agenda
===================================================

Initials indicate who presents what:

JDH - John D. Hunter
FP  - Fernando Perez
JW  - Jeff Whitaker


Day 1 (Friday December 7)
=========================

830-900 Installation and configuration (optional)
This half hour will be spent helping with installation issues, before the
real workshop begins.  If you've already set things up on your system
(meaning you have ipython, numpy, matplotlib and scipy installed and
running), feel free to skip this.

900-905 Introduction 
Official start of the workshop, introduce instructors.

905-945 JDH: Python for scientific computing
A high-level overview of the topic of Python in a scientific context.

950-1045 FP: Workflow, guided by a simple example: trapezoid integration.

This section will be used to illustrate basic workflow for students, by having
them 'type along' a very simple exercise, trapezoid rule integration.  We'll
discuss the basics of numpy arrays and will solve the trapezoid integration
exercise together.

Editor: (X)Emacs, Vi(m), etc.

ipython.  Saving and reloading files, interactive use of variables, %run,
%debug, %xmode verbose.

Getting help:
  - pydoc (-g, -p)

  - The standard docs (bookmark them)

  - ipython ?/??, help(), the tab key.  numpy.*cos*? search.

  - The open source process: mailing lists, wikis, svn.  Python
  cookbook. Participate!

Basic setup:
  - ipython
  - matplotlib (latex, etc).
  - Modules: import/reload, PYTHONPATH.

ToDo: Add numerical error measure of trapezoid rule.

ToDo Add in workflow comparison with scipy's integration. compare timing and
    eror.

1045:1100 --- Coffee break ---


1100:1145 FP: Introductory examples.

We'll have two exercises, so students who finish the first one early don't get
bored and can do a second one.

FFTs: 2-d image denoising via FFT.

Numerical integration and root finding: Find t such that

 \int_0^t{ f(s) ds} = u

for a known, monotonically increasing f(s) and a fixed u.

1145:12:30 --- Lunch Break ---

1300:1400 JDH: Basic numpy/pylab

* Glass2 demo: linear algebra, event handling in interactive plots.
* Glass1 exercise: simplified version of the above as an exercise.
* ODEs - Lotka Volterra equations.

1400:1500 JW, Basemap: geographical datasets.

1500 --- End of main work for Friday ---

1500:1700: Optional material (there's a Christmas party)

Web-based data sources, tabular data and record arrays, illustrated with Yahoo
Finance scraping, or PyDAP/OpenDAP.


Day 2 (Saturday December 8)
===========================

900:930 FP: Traits, Mayavi2 demo.  Automatic GUI generation, VTK library, the
MayaVi visualization application.  This is a demo of capabilities, not an
exercise.

930:1030 FP - Lightweight tools for low-level code reuse

f2py: Fortran code wrapping exercise.
weave: C/C++ inlining exercise.

1030:1045 --- Coffee break ---

1045:1200 JDH - Other tools for C/C++ code reuse, demos/slides.

* ctypes: easy access to dynamically linked libraries.
* pyrex: blend of python/C for automatic generation of native code.
* SWIG: automatic wrapping of C/C++ libraries.
* Boost.Python: automatic wrapping of C++ libraries with template support.
* A tour of scipy's code base, which uses several of these techniques.
 
1200:1300 --- Lunch break ---

1300:1500 Menu of options:

* Data fitting/smoothing: least squares, cubic splines, polynomial fitting.
Basic linear algebra (30 min).

* Bessel functions: special functions library, array manipulations to check
recursion relation (30 min).

* Descriptive statistics, statistical distributions (1 hr).

* SVD/eigenfaces (1 hr).

* Logistic map (1 hr).

* Sage intro/demo (20-30 min).

* Beautiful soup: screen-scraping HTML for data extraction (30 min).

* Word frequencies: use of dictionaries and text processing (20 min).

* Prime numbers: the Sieve of Erathostenes.  Illustrates lists and sets (30
  min).
  
* Wallis' pi: arbitrary precision integers (30 min).


Unused examples and exercises, extra ideas
==========================================

* Visual (VPython): Show some examples, explain.  Target shooting exercise.

* One-dimensional FFT - Bode plot.

* Spectral interpolation.

* Steinman interpolation.

* Extended precision root finding: manually implement newton's method using
  clnum or mpfr.
