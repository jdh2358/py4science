#LyX 1.4.3 created this file. For more info see http://www.lyx.org/
\lyxformat 245
\begin_document
\begin_header
\textclass amsbook
\begin_preamble
\input{preamble.tex}
\end_preamble
\language english
\inputencoding auto
\fontscheme default
\graphics default
\paperfontsize default
\spacing single
\papersize default
\use_geometry true
\use_amsmath 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\leftmargin 1.3in
\topmargin 1in
\rightmargin 1.3in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\end_header

\begin_body

\begin_layout Section
Sorting quickly with QuickSort 
\end_layout

\begin_layout Standard
Quicksort is one of the best known, and probably the simplest, fast algorithm
 for sorting 
\begin_inset Formula $n$
\end_inset

 items.
 It is fast in the sense that it requires on average 
\begin_inset Formula $\mathcal{O}(n\log n)$
\end_inset

 comparisons instead of 
\begin_inset Formula $\mathcal{O}(n^{2})$
\end_inset

, although a naive implementation does have quadratic worst-case behavior.
\end_layout

\begin_layout Standard
The algorithm uses a simple divide and conquer strategy, and its implementation
 is naturally recursive.
 Its basic steps are:
\end_layout

\begin_layout Enumerate
Pick an element from the list, called the pivot 
\begin_inset Formula $p$
\end_inset

 (any choice works).
\end_layout

\begin_layout Enumerate
Select from the rest of the list those elements smaller and those greater
 than the pivot, and store them in separate lists 
\begin_inset Formula $S$
\end_inset

 and 
\begin_inset Formula $G$
\end_inset

.
\end_layout

\begin_layout Enumerate
Recursively apply the algorithm
\family typewriter
 
\family default
to 
\begin_inset Formula $S$
\end_inset

 and 
\begin_inset Formula $G$
\end_inset

.
 The final result can be written as 
\begin_inset Formula $\sigma(S)+[p]+\sigma(G)$
\end_inset

, where 
\begin_inset Formula $\sigma$
\end_inset

 represents the sorting operation, 
\begin_inset Formula $+$
\end_inset

 indicates list concatenation and 
\begin_inset Formula $[p]$
\end_inset

 is the list containing the pivot as its single element.
\end_layout

\begin_layout Standard
The listing\InsetSpace ~

\begin_inset LatexCommand \ref{code:qsort_skel}

\end_inset

 contains a skeleton with no implementation but with tests already written
 (in the form of 
\emph on
unit tests
\emph default
, as described in the introduction).
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
lstinputlisting[label=code:qsort_skel,caption={IGNORED}]{skel/qsort_skel.py}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Hints
\end_layout

\begin_layout Itemize
Python has no particular syntactic requirements for implementing recursion,
 but it does have a maximum recursion depth.
 This value can be queried via the function 
\family typewriter
sys.getrecursionlimit()
\family default
, and it can be changed with 
\family typewriter
sys.setrecursionlimit(new_value)
\family default
.
 
\end_layout

\begin_layout Itemize
Like in all recursive problems, don't forget to implement an exit condition!
\end_layout

\begin_layout Itemize
If 
\family typewriter
L
\family default
 is a list, the call 
\family typewriter
len(L)
\family default
 provides its length.
\end_layout

\end_body
\end_document
